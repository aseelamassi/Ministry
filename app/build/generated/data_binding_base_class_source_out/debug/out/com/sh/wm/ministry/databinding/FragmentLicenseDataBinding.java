// Generated by view binder compiler. Do not edit!
package com.sh.wm.ministry.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.Guideline;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.sh.wm.ministry.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentLicenseDataBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final AppCompatButton btnAddFile;

  @NonNull
  public final AppCompatButton btnAddFileInsurance;

  @NonNull
  public final AppCompatButton btnAddFileRegistration;

  @NonNull
  public final AppCompatButton btnSave;

  @NonNull
  public final AppCompatButton btnSaveLicensed;

  @NonNull
  public final AppCompatButton btnSaveRegistration;

  @NonNull
  public final AppCompatButton btnSaveWithApprove;

  @NonNull
  public final EditText edConstructionCapital;

  @NonNull
  public final EditText edIncomeLevel;

  @NonNull
  public final TextView edInsuranceCompany;

  @NonNull
  public final TextView edInsuranceEndDate;

  @NonNull
  public final EditText edInsuranceNumber;

  @NonNull
  public final EditText edLicensedNumber;

  @NonNull
  public final TextView edLicensedSide;

  @NonNull
  public final EditText edRegistrationNumber;

  @NonNull
  public final TextView edRegistrationSide;

  @NonNull
  public final EditText edTotalWorkHour;

  @NonNull
  public final Guideline guideline;

  @NonNull
  public final RadioGroup rgConstructionWorkTime;

  @NonNull
  public final RadioGroup rgInsurance;

  @NonNull
  public final RadioGroup rgInternalSystem;

  @NonNull
  public final RadioGroup rgInternalSystemConfirm;

  @NonNull
  public final RadioGroup rgIsLicensed;

  @NonNull
  public final RadioGroup rgIsRegistration;

  @NonNull
  public final RecyclerView rvLicenseSide;

  @NonNull
  public final RecyclerView rvRegistrationSide;

  @NonNull
  public final TextView tvConstructionCapitalLabel;

  @NonNull
  public final TextView tvConstructionLicenseSideEmpty;

  @NonNull
  public final TextView tvConstructionLicenseSideLabel;

  @NonNull
  public final TextView tvConstructionRegistrationSideEmpty;

  @NonNull
  public final TextView tvConstructionRegistrationSideLabel;

  @NonNull
  public final TextView tvConstructionWorkTimeLabel;

  @NonNull
  public final TextView tvIncomeLevelLabel;

  @NonNull
  public final TextView tvInsuranceCompanyLabel;

  @NonNull
  public final TextView tvInsuranceEndDateLabel;

  @NonNull
  public final TextView tvInsuranceLabel;

  @NonNull
  public final TextView tvInsuranceNumberLabel;

  @NonNull
  public final TextView tvInternalSystemConfirmedLabel;

  @NonNull
  public final TextView tvInternalSystemLabel;

  @NonNull
  public final TextView tvLicensedLabel;

  @NonNull
  public final TextView tvLicensedNumberLabel;

  @NonNull
  public final TextView tvLicensedSideLabel;

  @NonNull
  public final TextView tvRegistrationLabel;

  @NonNull
  public final TextView tvRegistrationNumberLabel;

  @NonNull
  public final TextView tvRegistrationSideLabel;

  @NonNull
  public final TextView tvTotalWorkHourLabel;

  private FragmentLicenseDataBinding(@NonNull NestedScrollView rootView,
      @NonNull AppCompatButton btnAddFile, @NonNull AppCompatButton btnAddFileInsurance,
      @NonNull AppCompatButton btnAddFileRegistration, @NonNull AppCompatButton btnSave,
      @NonNull AppCompatButton btnSaveLicensed, @NonNull AppCompatButton btnSaveRegistration,
      @NonNull AppCompatButton btnSaveWithApprove, @NonNull EditText edConstructionCapital,
      @NonNull EditText edIncomeLevel, @NonNull TextView edInsuranceCompany,
      @NonNull TextView edInsuranceEndDate, @NonNull EditText edInsuranceNumber,
      @NonNull EditText edLicensedNumber, @NonNull TextView edLicensedSide,
      @NonNull EditText edRegistrationNumber, @NonNull TextView edRegistrationSide,
      @NonNull EditText edTotalWorkHour, @NonNull Guideline guideline,
      @NonNull RadioGroup rgConstructionWorkTime, @NonNull RadioGroup rgInsurance,
      @NonNull RadioGroup rgInternalSystem, @NonNull RadioGroup rgInternalSystemConfirm,
      @NonNull RadioGroup rgIsLicensed, @NonNull RadioGroup rgIsRegistration,
      @NonNull RecyclerView rvLicenseSide, @NonNull RecyclerView rvRegistrationSide,
      @NonNull TextView tvConstructionCapitalLabel,
      @NonNull TextView tvConstructionLicenseSideEmpty,
      @NonNull TextView tvConstructionLicenseSideLabel,
      @NonNull TextView tvConstructionRegistrationSideEmpty,
      @NonNull TextView tvConstructionRegistrationSideLabel,
      @NonNull TextView tvConstructionWorkTimeLabel, @NonNull TextView tvIncomeLevelLabel,
      @NonNull TextView tvInsuranceCompanyLabel, @NonNull TextView tvInsuranceEndDateLabel,
      @NonNull TextView tvInsuranceLabel, @NonNull TextView tvInsuranceNumberLabel,
      @NonNull TextView tvInternalSystemConfirmedLabel, @NonNull TextView tvInternalSystemLabel,
      @NonNull TextView tvLicensedLabel, @NonNull TextView tvLicensedNumberLabel,
      @NonNull TextView tvLicensedSideLabel, @NonNull TextView tvRegistrationLabel,
      @NonNull TextView tvRegistrationNumberLabel, @NonNull TextView tvRegistrationSideLabel,
      @NonNull TextView tvTotalWorkHourLabel) {
    this.rootView = rootView;
    this.btnAddFile = btnAddFile;
    this.btnAddFileInsurance = btnAddFileInsurance;
    this.btnAddFileRegistration = btnAddFileRegistration;
    this.btnSave = btnSave;
    this.btnSaveLicensed = btnSaveLicensed;
    this.btnSaveRegistration = btnSaveRegistration;
    this.btnSaveWithApprove = btnSaveWithApprove;
    this.edConstructionCapital = edConstructionCapital;
    this.edIncomeLevel = edIncomeLevel;
    this.edInsuranceCompany = edInsuranceCompany;
    this.edInsuranceEndDate = edInsuranceEndDate;
    this.edInsuranceNumber = edInsuranceNumber;
    this.edLicensedNumber = edLicensedNumber;
    this.edLicensedSide = edLicensedSide;
    this.edRegistrationNumber = edRegistrationNumber;
    this.edRegistrationSide = edRegistrationSide;
    this.edTotalWorkHour = edTotalWorkHour;
    this.guideline = guideline;
    this.rgConstructionWorkTime = rgConstructionWorkTime;
    this.rgInsurance = rgInsurance;
    this.rgInternalSystem = rgInternalSystem;
    this.rgInternalSystemConfirm = rgInternalSystemConfirm;
    this.rgIsLicensed = rgIsLicensed;
    this.rgIsRegistration = rgIsRegistration;
    this.rvLicenseSide = rvLicenseSide;
    this.rvRegistrationSide = rvRegistrationSide;
    this.tvConstructionCapitalLabel = tvConstructionCapitalLabel;
    this.tvConstructionLicenseSideEmpty = tvConstructionLicenseSideEmpty;
    this.tvConstructionLicenseSideLabel = tvConstructionLicenseSideLabel;
    this.tvConstructionRegistrationSideEmpty = tvConstructionRegistrationSideEmpty;
    this.tvConstructionRegistrationSideLabel = tvConstructionRegistrationSideLabel;
    this.tvConstructionWorkTimeLabel = tvConstructionWorkTimeLabel;
    this.tvIncomeLevelLabel = tvIncomeLevelLabel;
    this.tvInsuranceCompanyLabel = tvInsuranceCompanyLabel;
    this.tvInsuranceEndDateLabel = tvInsuranceEndDateLabel;
    this.tvInsuranceLabel = tvInsuranceLabel;
    this.tvInsuranceNumberLabel = tvInsuranceNumberLabel;
    this.tvInternalSystemConfirmedLabel = tvInternalSystemConfirmedLabel;
    this.tvInternalSystemLabel = tvInternalSystemLabel;
    this.tvLicensedLabel = tvLicensedLabel;
    this.tvLicensedNumberLabel = tvLicensedNumberLabel;
    this.tvLicensedSideLabel = tvLicensedSideLabel;
    this.tvRegistrationLabel = tvRegistrationLabel;
    this.tvRegistrationNumberLabel = tvRegistrationNumberLabel;
    this.tvRegistrationSideLabel = tvRegistrationSideLabel;
    this.tvTotalWorkHourLabel = tvTotalWorkHourLabel;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLicenseDataBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLicenseDataBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_license_data, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLicenseDataBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_add_file;
      AppCompatButton btnAddFile = rootView.findViewById(id);
      if (btnAddFile == null) {
        break missingId;
      }

      id = R.id.btn_add_file_insurance;
      AppCompatButton btnAddFileInsurance = rootView.findViewById(id);
      if (btnAddFileInsurance == null) {
        break missingId;
      }

      id = R.id.btn_add_file_registration;
      AppCompatButton btnAddFileRegistration = rootView.findViewById(id);
      if (btnAddFileRegistration == null) {
        break missingId;
      }

      id = R.id.btn_save;
      AppCompatButton btnSave = rootView.findViewById(id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.btn_save_licensed;
      AppCompatButton btnSaveLicensed = rootView.findViewById(id);
      if (btnSaveLicensed == null) {
        break missingId;
      }

      id = R.id.btn_save_registration;
      AppCompatButton btnSaveRegistration = rootView.findViewById(id);
      if (btnSaveRegistration == null) {
        break missingId;
      }

      id = R.id.btn_save_with_approve;
      AppCompatButton btnSaveWithApprove = rootView.findViewById(id);
      if (btnSaveWithApprove == null) {
        break missingId;
      }

      id = R.id.ed_construction_capital;
      EditText edConstructionCapital = rootView.findViewById(id);
      if (edConstructionCapital == null) {
        break missingId;
      }

      id = R.id.ed_income_level;
      EditText edIncomeLevel = rootView.findViewById(id);
      if (edIncomeLevel == null) {
        break missingId;
      }

      id = R.id.ed_insurance_company;
      TextView edInsuranceCompany = rootView.findViewById(id);
      if (edInsuranceCompany == null) {
        break missingId;
      }

      id = R.id.ed_insurance_end_date;
      TextView edInsuranceEndDate = rootView.findViewById(id);
      if (edInsuranceEndDate == null) {
        break missingId;
      }

      id = R.id.ed_insurance_number;
      EditText edInsuranceNumber = rootView.findViewById(id);
      if (edInsuranceNumber == null) {
        break missingId;
      }

      id = R.id.ed_licensed_number;
      EditText edLicensedNumber = rootView.findViewById(id);
      if (edLicensedNumber == null) {
        break missingId;
      }

      id = R.id.ed_licensed_side;
      TextView edLicensedSide = rootView.findViewById(id);
      if (edLicensedSide == null) {
        break missingId;
      }

      id = R.id.ed_registration_number;
      EditText edRegistrationNumber = rootView.findViewById(id);
      if (edRegistrationNumber == null) {
        break missingId;
      }

      id = R.id.ed_registration_side;
      TextView edRegistrationSide = rootView.findViewById(id);
      if (edRegistrationSide == null) {
        break missingId;
      }

      id = R.id.ed_total_work_hour;
      EditText edTotalWorkHour = rootView.findViewById(id);
      if (edTotalWorkHour == null) {
        break missingId;
      }

      id = R.id.guideline;
      Guideline guideline = rootView.findViewById(id);
      if (guideline == null) {
        break missingId;
      }

      id = R.id.rg_construction_work_time;
      RadioGroup rgConstructionWorkTime = rootView.findViewById(id);
      if (rgConstructionWorkTime == null) {
        break missingId;
      }

      id = R.id.rg_insurance;
      RadioGroup rgInsurance = rootView.findViewById(id);
      if (rgInsurance == null) {
        break missingId;
      }

      id = R.id.rg_internal_system;
      RadioGroup rgInternalSystem = rootView.findViewById(id);
      if (rgInternalSystem == null) {
        break missingId;
      }

      id = R.id.rg_internal_system_confirm;
      RadioGroup rgInternalSystemConfirm = rootView.findViewById(id);
      if (rgInternalSystemConfirm == null) {
        break missingId;
      }

      id = R.id.rg_is_licensed;
      RadioGroup rgIsLicensed = rootView.findViewById(id);
      if (rgIsLicensed == null) {
        break missingId;
      }

      id = R.id.rg_is_registration;
      RadioGroup rgIsRegistration = rootView.findViewById(id);
      if (rgIsRegistration == null) {
        break missingId;
      }

      id = R.id.rv_license_side;
      RecyclerView rvLicenseSide = rootView.findViewById(id);
      if (rvLicenseSide == null) {
        break missingId;
      }

      id = R.id.rv_registration_side;
      RecyclerView rvRegistrationSide = rootView.findViewById(id);
      if (rvRegistrationSide == null) {
        break missingId;
      }

      id = R.id.tv_construction_capital_label;
      TextView tvConstructionCapitalLabel = rootView.findViewById(id);
      if (tvConstructionCapitalLabel == null) {
        break missingId;
      }

      id = R.id.tv_construction_license_side_empty;
      TextView tvConstructionLicenseSideEmpty = rootView.findViewById(id);
      if (tvConstructionLicenseSideEmpty == null) {
        break missingId;
      }

      id = R.id.tv_construction_license_side_label;
      TextView tvConstructionLicenseSideLabel = rootView.findViewById(id);
      if (tvConstructionLicenseSideLabel == null) {
        break missingId;
      }

      id = R.id.tv_construction_registration_side_empty;
      TextView tvConstructionRegistrationSideEmpty = rootView.findViewById(id);
      if (tvConstructionRegistrationSideEmpty == null) {
        break missingId;
      }

      id = R.id.tv_construction_registration_side_label;
      TextView tvConstructionRegistrationSideLabel = rootView.findViewById(id);
      if (tvConstructionRegistrationSideLabel == null) {
        break missingId;
      }

      id = R.id.tv_construction_work_time_label;
      TextView tvConstructionWorkTimeLabel = rootView.findViewById(id);
      if (tvConstructionWorkTimeLabel == null) {
        break missingId;
      }

      id = R.id.tv_income_level_label;
      TextView tvIncomeLevelLabel = rootView.findViewById(id);
      if (tvIncomeLevelLabel == null) {
        break missingId;
      }

      id = R.id.tv_insurance_company_label;
      TextView tvInsuranceCompanyLabel = rootView.findViewById(id);
      if (tvInsuranceCompanyLabel == null) {
        break missingId;
      }

      id = R.id.tv_insurance_end_date_label;
      TextView tvInsuranceEndDateLabel = rootView.findViewById(id);
      if (tvInsuranceEndDateLabel == null) {
        break missingId;
      }

      id = R.id.tv_insurance_label;
      TextView tvInsuranceLabel = rootView.findViewById(id);
      if (tvInsuranceLabel == null) {
        break missingId;
      }

      id = R.id.tv_insurance_number_label;
      TextView tvInsuranceNumberLabel = rootView.findViewById(id);
      if (tvInsuranceNumberLabel == null) {
        break missingId;
      }

      id = R.id.tv_internal_system_confirmed_label;
      TextView tvInternalSystemConfirmedLabel = rootView.findViewById(id);
      if (tvInternalSystemConfirmedLabel == null) {
        break missingId;
      }

      id = R.id.tv_internal_system_label;
      TextView tvInternalSystemLabel = rootView.findViewById(id);
      if (tvInternalSystemLabel == null) {
        break missingId;
      }

      id = R.id.tv_licensed_label;
      TextView tvLicensedLabel = rootView.findViewById(id);
      if (tvLicensedLabel == null) {
        break missingId;
      }

      id = R.id.tv_licensed_number_label;
      TextView tvLicensedNumberLabel = rootView.findViewById(id);
      if (tvLicensedNumberLabel == null) {
        break missingId;
      }

      id = R.id.tv_licensed_side_label;
      TextView tvLicensedSideLabel = rootView.findViewById(id);
      if (tvLicensedSideLabel == null) {
        break missingId;
      }

      id = R.id.tv_registration_label;
      TextView tvRegistrationLabel = rootView.findViewById(id);
      if (tvRegistrationLabel == null) {
        break missingId;
      }

      id = R.id.tv_registration_number_label;
      TextView tvRegistrationNumberLabel = rootView.findViewById(id);
      if (tvRegistrationNumberLabel == null) {
        break missingId;
      }

      id = R.id.tv_registration_side_label;
      TextView tvRegistrationSideLabel = rootView.findViewById(id);
      if (tvRegistrationSideLabel == null) {
        break missingId;
      }

      id = R.id.tv_total_work_hour_label;
      TextView tvTotalWorkHourLabel = rootView.findViewById(id);
      if (tvTotalWorkHourLabel == null) {
        break missingId;
      }

      return new FragmentLicenseDataBinding((NestedScrollView) rootView, btnAddFile,
          btnAddFileInsurance, btnAddFileRegistration, btnSave, btnSaveLicensed,
          btnSaveRegistration, btnSaveWithApprove, edConstructionCapital, edIncomeLevel,
          edInsuranceCompany, edInsuranceEndDate, edInsuranceNumber, edLicensedNumber,
          edLicensedSide, edRegistrationNumber, edRegistrationSide, edTotalWorkHour, guideline,
          rgConstructionWorkTime, rgInsurance, rgInternalSystem, rgInternalSystemConfirm,
          rgIsLicensed, rgIsRegistration, rvLicenseSide, rvRegistrationSide,
          tvConstructionCapitalLabel, tvConstructionLicenseSideEmpty,
          tvConstructionLicenseSideLabel, tvConstructionRegistrationSideEmpty,
          tvConstructionRegistrationSideLabel, tvConstructionWorkTimeLabel, tvIncomeLevelLabel,
          tvInsuranceCompanyLabel, tvInsuranceEndDateLabel, tvInsuranceLabel,
          tvInsuranceNumberLabel, tvInternalSystemConfirmedLabel, tvInternalSystemLabel,
          tvLicensedLabel, tvLicensedNumberLabel, tvLicensedSideLabel, tvRegistrationLabel,
          tvRegistrationNumberLabel, tvRegistrationSideLabel, tvTotalWorkHourLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
