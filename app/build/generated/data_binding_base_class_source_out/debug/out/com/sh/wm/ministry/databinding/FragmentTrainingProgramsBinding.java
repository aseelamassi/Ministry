// Generated by view binder compiler. Do not edit!
package com.sh.wm.ministry.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.sh.wm.ministry.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentTrainingProgramsBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final LinearLayout LLLayoutUserLanguages;

  @NonNull
  public final MaterialButton btnAddTrainingPrograms;

  @NonNull
  public final FloatingActionButton fabAddTrainingPrograms;

  @NonNull
  public final ProgressBar progress;

  @NonNull
  public final RecyclerView rvTrainingPrograms;

  @NonNull
  public final TextView tvNoTrainingPrograms;

  private FragmentTrainingProgramsBinding(@NonNull FrameLayout rootView,
      @NonNull LinearLayout LLLayoutUserLanguages, @NonNull MaterialButton btnAddTrainingPrograms,
      @NonNull FloatingActionButton fabAddTrainingPrograms, @NonNull ProgressBar progress,
      @NonNull RecyclerView rvTrainingPrograms, @NonNull TextView tvNoTrainingPrograms) {
    this.rootView = rootView;
    this.LLLayoutUserLanguages = LLLayoutUserLanguages;
    this.btnAddTrainingPrograms = btnAddTrainingPrograms;
    this.fabAddTrainingPrograms = fabAddTrainingPrograms;
    this.progress = progress;
    this.rvTrainingPrograms = rvTrainingPrograms;
    this.tvNoTrainingPrograms = tvNoTrainingPrograms;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentTrainingProgramsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentTrainingProgramsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_training_programs, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentTrainingProgramsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.LL_layout_user_languages;
      LinearLayout LLLayoutUserLanguages = rootView.findViewById(id);
      if (LLLayoutUserLanguages == null) {
        break missingId;
      }

      id = R.id.btn_add_training_programs;
      MaterialButton btnAddTrainingPrograms = rootView.findViewById(id);
      if (btnAddTrainingPrograms == null) {
        break missingId;
      }

      id = R.id.fab_add_training_programs;
      FloatingActionButton fabAddTrainingPrograms = rootView.findViewById(id);
      if (fabAddTrainingPrograms == null) {
        break missingId;
      }

      id = R.id.progress;
      ProgressBar progress = rootView.findViewById(id);
      if (progress == null) {
        break missingId;
      }

      id = R.id.rv_training_programs;
      RecyclerView rvTrainingPrograms = rootView.findViewById(id);
      if (rvTrainingPrograms == null) {
        break missingId;
      }

      id = R.id.tv_no_training_programs;
      TextView tvNoTrainingPrograms = rootView.findViewById(id);
      if (tvNoTrainingPrograms == null) {
        break missingId;
      }

      return new FragmentTrainingProgramsBinding((FrameLayout) rootView, LLLayoutUserLanguages,
          btnAddTrainingPrograms, fabAddTrainingPrograms, progress, rvTrainingPrograms,
          tvNoTrainingPrograms);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
