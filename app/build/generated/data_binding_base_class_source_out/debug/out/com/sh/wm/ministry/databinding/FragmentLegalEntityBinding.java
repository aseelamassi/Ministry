// Generated by view binder compiler. Do not edit!
package com.sh.wm.ministry.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.RadioGroup;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.AppCompatImageButton;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.sh.wm.ministry.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentLegalEntityBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final AppCompatButton btnAdaOwner;

  @NonNull
  public final AppCompatButton btnAddSecondarySector;

  @NonNull
  public final AppCompatImageButton btnGetData;

  @NonNull
  public final AppCompatImageButton btnGetManagerData;

  @NonNull
  public final AppCompatButton btnSave;

  @NonNull
  public final AppCompatButton btnSaveWithApprove;

  @NonNull
  public final ScrollView contenerMoveFacilty;

  @NonNull
  public final TextView edActiveDescription;

  @NonNull
  public final TextView edConstructionOwnership;

  @NonNull
  public final TextView edConstructionPermanence;

  @NonNull
  public final TextView edEndDate;

  @NonNull
  public final TextView edLegalEntity;

  @NonNull
  public final TextView edMainActive;

  @NonNull
  public final TextView edManagerName;

  @NonNull
  public final EditText edManagerSn;

  @NonNull
  public final TextView edOwnerName;

  @NonNull
  public final EditText edPracticingYear;

  @NonNull
  public final TextView edSecondaryActive;

  @NonNull
  public final TextView edSecondaryActiveDescription;

  @NonNull
  public final TextView edStartDate;

  @NonNull
  public final TextView edStartWorkDate;

  @NonNull
  public final TextView edTvConstructionType;

  @NonNull
  public final EditText edWorkerNumberCurrently;

  @NonNull
  public final EditText edWorkerNumberWhenEstablishing;

  @NonNull
  public final EditText etSn;

  @NonNull
  public final RadioGroup rgSecondaryActive;

  @NonNull
  public final RecyclerView rvOwner;

  @NonNull
  public final RecyclerView rvSecondaryActive;

  @NonNull
  public final TextView tvActiveDescription;

  @NonNull
  public final TextView tvConstructionOwnership;

  @NonNull
  public final TextView tvConstructionPermanence;

  @NonNull
  public final TextView tvConstructionType;

  @NonNull
  public final TextView tvEndDate;

  @NonNull
  public final TextView tvLegalEntity;

  @NonNull
  public final TextView tvMainActive;

  @NonNull
  public final TextView tvManagerName;

  @NonNull
  public final TextView tvManagerSn;

  @NonNull
  public final TextView tvOwnerName;

  @NonNull
  public final TextView tvOwnerSn;

  @NonNull
  public final TextView tvPracticingYear;

  @NonNull
  public final TextView tvRegistrationLabel;

  @NonNull
  public final TextView tvSecondaryActive;

  @NonNull
  public final TextView tvSecondaryActiveDescription;

  @NonNull
  public final TextView tvStartDate;

  @NonNull
  public final TextView tvStartWorkDate;

  @NonNull
  public final TextView tvWorkerNumberCurrently;

  @NonNull
  public final TextView tvWorkerNumberWhenEstablishing;

  private FragmentLegalEntityBinding(@NonNull ScrollView rootView,
      @NonNull AppCompatButton btnAdaOwner, @NonNull AppCompatButton btnAddSecondarySector,
      @NonNull AppCompatImageButton btnGetData, @NonNull AppCompatImageButton btnGetManagerData,
      @NonNull AppCompatButton btnSave, @NonNull AppCompatButton btnSaveWithApprove,
      @NonNull ScrollView contenerMoveFacilty, @NonNull TextView edActiveDescription,
      @NonNull TextView edConstructionOwnership, @NonNull TextView edConstructionPermanence,
      @NonNull TextView edEndDate, @NonNull TextView edLegalEntity, @NonNull TextView edMainActive,
      @NonNull TextView edManagerName, @NonNull EditText edManagerSn, @NonNull TextView edOwnerName,
      @NonNull EditText edPracticingYear, @NonNull TextView edSecondaryActive,
      @NonNull TextView edSecondaryActiveDescription, @NonNull TextView edStartDate,
      @NonNull TextView edStartWorkDate, @NonNull TextView edTvConstructionType,
      @NonNull EditText edWorkerNumberCurrently, @NonNull EditText edWorkerNumberWhenEstablishing,
      @NonNull EditText etSn, @NonNull RadioGroup rgSecondaryActive, @NonNull RecyclerView rvOwner,
      @NonNull RecyclerView rvSecondaryActive, @NonNull TextView tvActiveDescription,
      @NonNull TextView tvConstructionOwnership, @NonNull TextView tvConstructionPermanence,
      @NonNull TextView tvConstructionType, @NonNull TextView tvEndDate,
      @NonNull TextView tvLegalEntity, @NonNull TextView tvMainActive,
      @NonNull TextView tvManagerName, @NonNull TextView tvManagerSn, @NonNull TextView tvOwnerName,
      @NonNull TextView tvOwnerSn, @NonNull TextView tvPracticingYear,
      @NonNull TextView tvRegistrationLabel, @NonNull TextView tvSecondaryActive,
      @NonNull TextView tvSecondaryActiveDescription, @NonNull TextView tvStartDate,
      @NonNull TextView tvStartWorkDate, @NonNull TextView tvWorkerNumberCurrently,
      @NonNull TextView tvWorkerNumberWhenEstablishing) {
    this.rootView = rootView;
    this.btnAdaOwner = btnAdaOwner;
    this.btnAddSecondarySector = btnAddSecondarySector;
    this.btnGetData = btnGetData;
    this.btnGetManagerData = btnGetManagerData;
    this.btnSave = btnSave;
    this.btnSaveWithApprove = btnSaveWithApprove;
    this.contenerMoveFacilty = contenerMoveFacilty;
    this.edActiveDescription = edActiveDescription;
    this.edConstructionOwnership = edConstructionOwnership;
    this.edConstructionPermanence = edConstructionPermanence;
    this.edEndDate = edEndDate;
    this.edLegalEntity = edLegalEntity;
    this.edMainActive = edMainActive;
    this.edManagerName = edManagerName;
    this.edManagerSn = edManagerSn;
    this.edOwnerName = edOwnerName;
    this.edPracticingYear = edPracticingYear;
    this.edSecondaryActive = edSecondaryActive;
    this.edSecondaryActiveDescription = edSecondaryActiveDescription;
    this.edStartDate = edStartDate;
    this.edStartWorkDate = edStartWorkDate;
    this.edTvConstructionType = edTvConstructionType;
    this.edWorkerNumberCurrently = edWorkerNumberCurrently;
    this.edWorkerNumberWhenEstablishing = edWorkerNumberWhenEstablishing;
    this.etSn = etSn;
    this.rgSecondaryActive = rgSecondaryActive;
    this.rvOwner = rvOwner;
    this.rvSecondaryActive = rvSecondaryActive;
    this.tvActiveDescription = tvActiveDescription;
    this.tvConstructionOwnership = tvConstructionOwnership;
    this.tvConstructionPermanence = tvConstructionPermanence;
    this.tvConstructionType = tvConstructionType;
    this.tvEndDate = tvEndDate;
    this.tvLegalEntity = tvLegalEntity;
    this.tvMainActive = tvMainActive;
    this.tvManagerName = tvManagerName;
    this.tvManagerSn = tvManagerSn;
    this.tvOwnerName = tvOwnerName;
    this.tvOwnerSn = tvOwnerSn;
    this.tvPracticingYear = tvPracticingYear;
    this.tvRegistrationLabel = tvRegistrationLabel;
    this.tvSecondaryActive = tvSecondaryActive;
    this.tvSecondaryActiveDescription = tvSecondaryActiveDescription;
    this.tvStartDate = tvStartDate;
    this.tvStartWorkDate = tvStartWorkDate;
    this.tvWorkerNumberCurrently = tvWorkerNumberCurrently;
    this.tvWorkerNumberWhenEstablishing = tvWorkerNumberWhenEstablishing;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLegalEntityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLegalEntityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_legal_entity, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLegalEntityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_ada_owner;
      AppCompatButton btnAdaOwner = rootView.findViewById(id);
      if (btnAdaOwner == null) {
        break missingId;
      }

      id = R.id.btn_add_secondary_sector;
      AppCompatButton btnAddSecondarySector = rootView.findViewById(id);
      if (btnAddSecondarySector == null) {
        break missingId;
      }

      id = R.id.btn_get_data;
      AppCompatImageButton btnGetData = rootView.findViewById(id);
      if (btnGetData == null) {
        break missingId;
      }

      id = R.id.btn_get_manager_data;
      AppCompatImageButton btnGetManagerData = rootView.findViewById(id);
      if (btnGetManagerData == null) {
        break missingId;
      }

      id = R.id.btn_save;
      AppCompatButton btnSave = rootView.findViewById(id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.btn_save_with_approve;
      AppCompatButton btnSaveWithApprove = rootView.findViewById(id);
      if (btnSaveWithApprove == null) {
        break missingId;
      }

      ScrollView contenerMoveFacilty = (ScrollView) rootView;

      id = R.id.ed_active_description;
      TextView edActiveDescription = rootView.findViewById(id);
      if (edActiveDescription == null) {
        break missingId;
      }

      id = R.id.ed_construction_ownership;
      TextView edConstructionOwnership = rootView.findViewById(id);
      if (edConstructionOwnership == null) {
        break missingId;
      }

      id = R.id.ed_construction_permanence;
      TextView edConstructionPermanence = rootView.findViewById(id);
      if (edConstructionPermanence == null) {
        break missingId;
      }

      id = R.id.ed_end_date;
      TextView edEndDate = rootView.findViewById(id);
      if (edEndDate == null) {
        break missingId;
      }

      id = R.id.ed_legal_entity;
      TextView edLegalEntity = rootView.findViewById(id);
      if (edLegalEntity == null) {
        break missingId;
      }

      id = R.id.ed_main_active;
      TextView edMainActive = rootView.findViewById(id);
      if (edMainActive == null) {
        break missingId;
      }

      id = R.id.ed_manager_name;
      TextView edManagerName = rootView.findViewById(id);
      if (edManagerName == null) {
        break missingId;
      }

      id = R.id.ed_manager_sn;
      EditText edManagerSn = rootView.findViewById(id);
      if (edManagerSn == null) {
        break missingId;
      }

      id = R.id.ed_owner_name;
      TextView edOwnerName = rootView.findViewById(id);
      if (edOwnerName == null) {
        break missingId;
      }

      id = R.id.ed_practicing_year;
      EditText edPracticingYear = rootView.findViewById(id);
      if (edPracticingYear == null) {
        break missingId;
      }

      id = R.id.ed_secondary_active;
      TextView edSecondaryActive = rootView.findViewById(id);
      if (edSecondaryActive == null) {
        break missingId;
      }

      id = R.id.ed_secondary_active_description;
      TextView edSecondaryActiveDescription = rootView.findViewById(id);
      if (edSecondaryActiveDescription == null) {
        break missingId;
      }

      id = R.id.ed_start_date;
      TextView edStartDate = rootView.findViewById(id);
      if (edStartDate == null) {
        break missingId;
      }

      id = R.id.ed_start_work_date;
      TextView edStartWorkDate = rootView.findViewById(id);
      if (edStartWorkDate == null) {
        break missingId;
      }

      id = R.id.ed_tv_construction_type;
      TextView edTvConstructionType = rootView.findViewById(id);
      if (edTvConstructionType == null) {
        break missingId;
      }

      id = R.id.ed_worker_number_currently;
      EditText edWorkerNumberCurrently = rootView.findViewById(id);
      if (edWorkerNumberCurrently == null) {
        break missingId;
      }

      id = R.id.ed_worker_number_when_establishing;
      EditText edWorkerNumberWhenEstablishing = rootView.findViewById(id);
      if (edWorkerNumberWhenEstablishing == null) {
        break missingId;
      }

      id = R.id.et_sn;
      EditText etSn = rootView.findViewById(id);
      if (etSn == null) {
        break missingId;
      }

      id = R.id.rg_secondary_active;
      RadioGroup rgSecondaryActive = rootView.findViewById(id);
      if (rgSecondaryActive == null) {
        break missingId;
      }

      id = R.id.rv_owner;
      RecyclerView rvOwner = rootView.findViewById(id);
      if (rvOwner == null) {
        break missingId;
      }

      id = R.id.rv_secondary_active;
      RecyclerView rvSecondaryActive = rootView.findViewById(id);
      if (rvSecondaryActive == null) {
        break missingId;
      }

      id = R.id.tv_active_description;
      TextView tvActiveDescription = rootView.findViewById(id);
      if (tvActiveDescription == null) {
        break missingId;
      }

      id = R.id.tv_construction_ownership;
      TextView tvConstructionOwnership = rootView.findViewById(id);
      if (tvConstructionOwnership == null) {
        break missingId;
      }

      id = R.id.tv_construction_permanence;
      TextView tvConstructionPermanence = rootView.findViewById(id);
      if (tvConstructionPermanence == null) {
        break missingId;
      }

      id = R.id.tv_construction_type;
      TextView tvConstructionType = rootView.findViewById(id);
      if (tvConstructionType == null) {
        break missingId;
      }

      id = R.id.tv_end_date;
      TextView tvEndDate = rootView.findViewById(id);
      if (tvEndDate == null) {
        break missingId;
      }

      id = R.id.tv_legal_entity;
      TextView tvLegalEntity = rootView.findViewById(id);
      if (tvLegalEntity == null) {
        break missingId;
      }

      id = R.id.tv_main_active;
      TextView tvMainActive = rootView.findViewById(id);
      if (tvMainActive == null) {
        break missingId;
      }

      id = R.id.tv_manager_name;
      TextView tvManagerName = rootView.findViewById(id);
      if (tvManagerName == null) {
        break missingId;
      }

      id = R.id.tv_manager_sn;
      TextView tvManagerSn = rootView.findViewById(id);
      if (tvManagerSn == null) {
        break missingId;
      }

      id = R.id.tv_owner_name;
      TextView tvOwnerName = rootView.findViewById(id);
      if (tvOwnerName == null) {
        break missingId;
      }

      id = R.id.tv_owner_sn;
      TextView tvOwnerSn = rootView.findViewById(id);
      if (tvOwnerSn == null) {
        break missingId;
      }

      id = R.id.tv_practicing_year;
      TextView tvPracticingYear = rootView.findViewById(id);
      if (tvPracticingYear == null) {
        break missingId;
      }

      id = R.id.tv_registration_label;
      TextView tvRegistrationLabel = rootView.findViewById(id);
      if (tvRegistrationLabel == null) {
        break missingId;
      }

      id = R.id.tv_secondary_active;
      TextView tvSecondaryActive = rootView.findViewById(id);
      if (tvSecondaryActive == null) {
        break missingId;
      }

      id = R.id.tv_secondary_active_description;
      TextView tvSecondaryActiveDescription = rootView.findViewById(id);
      if (tvSecondaryActiveDescription == null) {
        break missingId;
      }

      id = R.id.tv_start_date;
      TextView tvStartDate = rootView.findViewById(id);
      if (tvStartDate == null) {
        break missingId;
      }

      id = R.id.tv_start_work_date;
      TextView tvStartWorkDate = rootView.findViewById(id);
      if (tvStartWorkDate == null) {
        break missingId;
      }

      id = R.id.tv_worker_number_currently;
      TextView tvWorkerNumberCurrently = rootView.findViewById(id);
      if (tvWorkerNumberCurrently == null) {
        break missingId;
      }

      id = R.id.tv_worker_number_when_establishing;
      TextView tvWorkerNumberWhenEstablishing = rootView.findViewById(id);
      if (tvWorkerNumberWhenEstablishing == null) {
        break missingId;
      }

      return new FragmentLegalEntityBinding((ScrollView) rootView, btnAdaOwner,
          btnAddSecondarySector, btnGetData, btnGetManagerData, btnSave, btnSaveWithApprove,
          contenerMoveFacilty, edActiveDescription, edConstructionOwnership,
          edConstructionPermanence, edEndDate, edLegalEntity, edMainActive, edManagerName,
          edManagerSn, edOwnerName, edPracticingYear, edSecondaryActive,
          edSecondaryActiveDescription, edStartDate, edStartWorkDate, edTvConstructionType,
          edWorkerNumberCurrently, edWorkerNumberWhenEstablishing, etSn, rgSecondaryActive, rvOwner,
          rvSecondaryActive, tvActiveDescription, tvConstructionOwnership, tvConstructionPermanence,
          tvConstructionType, tvEndDate, tvLegalEntity, tvMainActive, tvManagerName, tvManagerSn,
          tvOwnerName, tvOwnerSn, tvPracticingYear, tvRegistrationLabel, tvSecondaryActive,
          tvSecondaryActiveDescription, tvStartDate, tvStartWorkDate, tvWorkerNumberCurrently,
          tvWorkerNumberWhenEstablishing);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
