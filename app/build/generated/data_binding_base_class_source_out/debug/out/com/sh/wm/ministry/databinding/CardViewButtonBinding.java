// Generated by view binder compiler. Do not edit!
package com.sh.wm.ministry.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.card.MaterialCardView;
import com.sh.wm.ministry.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CardViewButtonBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final AppCompatImageView appCompatImageView;

  @NonNull
  public final MaterialCardView moveFacilityHomeFragmrnt;

  @NonNull
  public final TextView tvTitleSlideCardHome;

  @NonNull
  public final View viewAccent;

  private CardViewButtonBinding(@NonNull MaterialCardView rootView,
      @NonNull AppCompatImageView appCompatImageView,
      @NonNull MaterialCardView moveFacilityHomeFragmrnt, @NonNull TextView tvTitleSlideCardHome,
      @NonNull View viewAccent) {
    this.rootView = rootView;
    this.appCompatImageView = appCompatImageView;
    this.moveFacilityHomeFragmrnt = moveFacilityHomeFragmrnt;
    this.tvTitleSlideCardHome = tvTitleSlideCardHome;
    this.viewAccent = viewAccent;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static CardViewButtonBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CardViewButtonBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.card_view_button, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CardViewButtonBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appCompatImageView;
      AppCompatImageView appCompatImageView = rootView.findViewById(id);
      if (appCompatImageView == null) {
        break missingId;
      }

      MaterialCardView moveFacilityHomeFragmrnt = (MaterialCardView) rootView;

      id = R.id.tv_title_slide_card_home;
      TextView tvTitleSlideCardHome = rootView.findViewById(id);
      if (tvTitleSlideCardHome == null) {
        break missingId;
      }

      id = R.id.view_accent;
      View viewAccent = rootView.findViewById(id);
      if (viewAccent == null) {
        break missingId;
      }

      return new CardViewButtonBinding((MaterialCardView) rootView, appCompatImageView,
          moveFacilityHomeFragmrnt, tvTitleSlideCardHome, viewAccent);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
