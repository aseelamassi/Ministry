// Generated by view binder compiler. Do not edit!
package com.sh.wm.ministry.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.sh.wm.ministry.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final CardViewButtonBinding btnMoveFacility;

  @NonNull
  public final CardViewButtonBinding cvAlertTemplate;

  @NonNull
  public final CardViewHomeCardsBinding cvBreakdownStatement;

  @NonNull
  public final CardViewButtonBinding cvCloseFacility;

  @NonNull
  public final CardViewButtonBinding cvCreateSeizureReport;

  @NonNull
  public final CardViewHomeCardsBinding cvHolandTest;

  @NonNull
  public final CardViewButtonBinding cvLegalAction;

  @NonNull
  public final CardViewButtonBinding cvReportLeftWorkInPlace;

  @NonNull
  public final CardViewButtonBinding cvReportNewWorkPlace;

  @NonNull
  public final CardViewHomeCardsBinding cvRequestCalculateLaborRights;

  @NonNull
  public final CardViewHomeCardsBinding cvRequsetRegisterCertification;

  @NonNull
  public final CardViewHomeCardsBinding cvVisitsServices;

  @NonNull
  public final CardViewHomeCardsBinding cvWorkerComplaint;

  @NonNull
  public final LinearLayout llLegalProcedures;

  @NonNull
  public final ProgressBar progress;

  private FragmentHomeBinding(@NonNull ScrollView rootView,
      @NonNull CardViewButtonBinding btnMoveFacility,
      @NonNull CardViewButtonBinding cvAlertTemplate,
      @NonNull CardViewHomeCardsBinding cvBreakdownStatement,
      @NonNull CardViewButtonBinding cvCloseFacility,
      @NonNull CardViewButtonBinding cvCreateSeizureReport,
      @NonNull CardViewHomeCardsBinding cvHolandTest, @NonNull CardViewButtonBinding cvLegalAction,
      @NonNull CardViewButtonBinding cvReportLeftWorkInPlace,
      @NonNull CardViewButtonBinding cvReportNewWorkPlace,
      @NonNull CardViewHomeCardsBinding cvRequestCalculateLaborRights,
      @NonNull CardViewHomeCardsBinding cvRequsetRegisterCertification,
      @NonNull CardViewHomeCardsBinding cvVisitsServices,
      @NonNull CardViewHomeCardsBinding cvWorkerComplaint, @NonNull LinearLayout llLegalProcedures,
      @NonNull ProgressBar progress) {
    this.rootView = rootView;
    this.btnMoveFacility = btnMoveFacility;
    this.cvAlertTemplate = cvAlertTemplate;
    this.cvBreakdownStatement = cvBreakdownStatement;
    this.cvCloseFacility = cvCloseFacility;
    this.cvCreateSeizureReport = cvCreateSeizureReport;
    this.cvHolandTest = cvHolandTest;
    this.cvLegalAction = cvLegalAction;
    this.cvReportLeftWorkInPlace = cvReportLeftWorkInPlace;
    this.cvReportNewWorkPlace = cvReportNewWorkPlace;
    this.cvRequestCalculateLaborRights = cvRequestCalculateLaborRights;
    this.cvRequsetRegisterCertification = cvRequsetRegisterCertification;
    this.cvVisitsServices = cvVisitsServices;
    this.cvWorkerComplaint = cvWorkerComplaint;
    this.llLegalProcedures = llLegalProcedures;
    this.progress = progress;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_move_facility;
      View btnMoveFacility = rootView.findViewById(id);
      if (btnMoveFacility == null) {
        break missingId;
      }
      CardViewButtonBinding binding_btnMoveFacility = CardViewButtonBinding.bind(btnMoveFacility);

      id = R.id.cv_alert_template;
      View cvAlertTemplate = rootView.findViewById(id);
      if (cvAlertTemplate == null) {
        break missingId;
      }
      CardViewButtonBinding binding_cvAlertTemplate = CardViewButtonBinding.bind(cvAlertTemplate);

      id = R.id.cv_breakdown_statement;
      View cvBreakdownStatement = rootView.findViewById(id);
      if (cvBreakdownStatement == null) {
        break missingId;
      }
      CardViewHomeCardsBinding binding_cvBreakdownStatement = CardViewHomeCardsBinding.bind(cvBreakdownStatement);

      id = R.id.cv_close_facility;
      View cvCloseFacility = rootView.findViewById(id);
      if (cvCloseFacility == null) {
        break missingId;
      }
      CardViewButtonBinding binding_cvCloseFacility = CardViewButtonBinding.bind(cvCloseFacility);

      id = R.id.cv_create_seizure_report;
      View cvCreateSeizureReport = rootView.findViewById(id);
      if (cvCreateSeizureReport == null) {
        break missingId;
      }
      CardViewButtonBinding binding_cvCreateSeizureReport = CardViewButtonBinding.bind(cvCreateSeizureReport);

      id = R.id.cv_holand_test;
      View cvHolandTest = rootView.findViewById(id);
      if (cvHolandTest == null) {
        break missingId;
      }
      CardViewHomeCardsBinding binding_cvHolandTest = CardViewHomeCardsBinding.bind(cvHolandTest);

      id = R.id.cv_legal_action;
      View cvLegalAction = rootView.findViewById(id);
      if (cvLegalAction == null) {
        break missingId;
      }
      CardViewButtonBinding binding_cvLegalAction = CardViewButtonBinding.bind(cvLegalAction);

      id = R.id.cv_report_left_work_in_place;
      View cvReportLeftWorkInPlace = rootView.findViewById(id);
      if (cvReportLeftWorkInPlace == null) {
        break missingId;
      }
      CardViewButtonBinding binding_cvReportLeftWorkInPlace = CardViewButtonBinding.bind(cvReportLeftWorkInPlace);

      id = R.id.cv_report_new_work_place;
      View cvReportNewWorkPlace = rootView.findViewById(id);
      if (cvReportNewWorkPlace == null) {
        break missingId;
      }
      CardViewButtonBinding binding_cvReportNewWorkPlace = CardViewButtonBinding.bind(cvReportNewWorkPlace);

      id = R.id.cv_Request_calculate_labor_rights;
      View cvRequestCalculateLaborRights = rootView.findViewById(id);
      if (cvRequestCalculateLaborRights == null) {
        break missingId;
      }
      CardViewHomeCardsBinding binding_cvRequestCalculateLaborRights = CardViewHomeCardsBinding.bind(cvRequestCalculateLaborRights);

      id = R.id.cv_requset_register_certification;
      View cvRequsetRegisterCertification = rootView.findViewById(id);
      if (cvRequsetRegisterCertification == null) {
        break missingId;
      }
      CardViewHomeCardsBinding binding_cvRequsetRegisterCertification = CardViewHomeCardsBinding.bind(cvRequsetRegisterCertification);

      id = R.id.cv_visits_services;
      View cvVisitsServices = rootView.findViewById(id);
      if (cvVisitsServices == null) {
        break missingId;
      }
      CardViewHomeCardsBinding binding_cvVisitsServices = CardViewHomeCardsBinding.bind(cvVisitsServices);

      id = R.id.cv_worker_complaint;
      View cvWorkerComplaint = rootView.findViewById(id);
      if (cvWorkerComplaint == null) {
        break missingId;
      }
      CardViewHomeCardsBinding binding_cvWorkerComplaint = CardViewHomeCardsBinding.bind(cvWorkerComplaint);

      id = R.id.ll_legal_procedures;
      LinearLayout llLegalProcedures = rootView.findViewById(id);
      if (llLegalProcedures == null) {
        break missingId;
      }

      id = R.id.progress;
      ProgressBar progress = rootView.findViewById(id);
      if (progress == null) {
        break missingId;
      }

      return new FragmentHomeBinding((ScrollView) rootView, binding_btnMoveFacility,
          binding_cvAlertTemplate, binding_cvBreakdownStatement, binding_cvCloseFacility,
          binding_cvCreateSeizureReport, binding_cvHolandTest, binding_cvLegalAction,
          binding_cvReportLeftWorkInPlace, binding_cvReportNewWorkPlace,
          binding_cvRequestCalculateLaborRights, binding_cvRequsetRegisterCertification,
          binding_cvVisitsServices, binding_cvWorkerComplaint, llLegalProcedures, progress);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
