// Generated by view binder compiler. Do not edit!
package com.sh.wm.ministry.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.sh.wm.ministry.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentReturningLaborBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final LinearLayout LLLayoutReturningLabor;

  @NonNull
  public final MaterialButton btnAddReturningLabor;

  @NonNull
  public final FloatingActionButton fabAddReturningLabor;

  @NonNull
  public final ProgressBar progress;

  @NonNull
  public final RecyclerView rvReturningLabor;

  @NonNull
  public final TextView tvNoReturningLabor;

  private FragmentReturningLaborBinding(@NonNull FrameLayout rootView,
      @NonNull LinearLayout LLLayoutReturningLabor, @NonNull MaterialButton btnAddReturningLabor,
      @NonNull FloatingActionButton fabAddReturningLabor, @NonNull ProgressBar progress,
      @NonNull RecyclerView rvReturningLabor, @NonNull TextView tvNoReturningLabor) {
    this.rootView = rootView;
    this.LLLayoutReturningLabor = LLLayoutReturningLabor;
    this.btnAddReturningLabor = btnAddReturningLabor;
    this.fabAddReturningLabor = fabAddReturningLabor;
    this.progress = progress;
    this.rvReturningLabor = rvReturningLabor;
    this.tvNoReturningLabor = tvNoReturningLabor;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentReturningLaborBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentReturningLaborBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_returning_labor, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentReturningLaborBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.LL_layout_returning_labor;
      LinearLayout LLLayoutReturningLabor = rootView.findViewById(id);
      if (LLLayoutReturningLabor == null) {
        break missingId;
      }

      id = R.id.btn_add_returning_labor;
      MaterialButton btnAddReturningLabor = rootView.findViewById(id);
      if (btnAddReturningLabor == null) {
        break missingId;
      }

      id = R.id.fab_add_returning_labor;
      FloatingActionButton fabAddReturningLabor = rootView.findViewById(id);
      if (fabAddReturningLabor == null) {
        break missingId;
      }

      id = R.id.progress;
      ProgressBar progress = rootView.findViewById(id);
      if (progress == null) {
        break missingId;
      }

      id = R.id.rv_returning_labor;
      RecyclerView rvReturningLabor = rootView.findViewById(id);
      if (rvReturningLabor == null) {
        break missingId;
      }

      id = R.id.tv_no_returning_labor;
      TextView tvNoReturningLabor = rootView.findViewById(id);
      if (tvNoReturningLabor == null) {
        break missingId;
      }

      return new FragmentReturningLaborBinding((FrameLayout) rootView, LLLayoutReturningLabor,
          btnAddReturningLabor, fabAddReturningLabor, progress, rvReturningLabor,
          tvNoReturningLabor);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
