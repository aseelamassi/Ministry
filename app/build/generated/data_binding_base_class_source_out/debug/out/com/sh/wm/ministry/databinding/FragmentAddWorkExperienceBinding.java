// Generated by view binder compiler. Do not edit!
package com.sh.wm.ministry.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.sh.wm.ministry.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAddWorkExperienceBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final MaterialButton btnSaveAddExperience;

  @NonNull
  public final LinearLayout lnDate;

  @NonNull
  public final LinearLayout lnInstName;

  @NonNull
  public final LinearLayout lnJobName;

  @NonNull
  public final LinearLayout lnTop;

  @NonNull
  public final ProgressBar progress;

  @NonNull
  public final TextInputEditText tvExperienceTypeAddWorkExperience;

  @NonNull
  public final TextInputEditText tvInstitutionNameAddWorkExperience;

  @NonNull
  public final TextInputEditText tvJobTitleAddWorkExperience;

  @NonNull
  public final TextInputEditText tvNotesAddWorkExperience;

  @NonNull
  public final TextInputEditText tvWorkBeginningDateAddWorkExperience;

  @NonNull
  public final TextInputEditText tvWorkEndingDateAddWorkExperience;

  @NonNull
  public final TextInputEditText tvWorkPlaceAddWorkExperience;

  private FragmentAddWorkExperienceBinding(@NonNull RelativeLayout rootView,
      @NonNull MaterialButton btnSaveAddExperience, @NonNull LinearLayout lnDate,
      @NonNull LinearLayout lnInstName, @NonNull LinearLayout lnJobName,
      @NonNull LinearLayout lnTop, @NonNull ProgressBar progress,
      @NonNull TextInputEditText tvExperienceTypeAddWorkExperience,
      @NonNull TextInputEditText tvInstitutionNameAddWorkExperience,
      @NonNull TextInputEditText tvJobTitleAddWorkExperience,
      @NonNull TextInputEditText tvNotesAddWorkExperience,
      @NonNull TextInputEditText tvWorkBeginningDateAddWorkExperience,
      @NonNull TextInputEditText tvWorkEndingDateAddWorkExperience,
      @NonNull TextInputEditText tvWorkPlaceAddWorkExperience) {
    this.rootView = rootView;
    this.btnSaveAddExperience = btnSaveAddExperience;
    this.lnDate = lnDate;
    this.lnInstName = lnInstName;
    this.lnJobName = lnJobName;
    this.lnTop = lnTop;
    this.progress = progress;
    this.tvExperienceTypeAddWorkExperience = tvExperienceTypeAddWorkExperience;
    this.tvInstitutionNameAddWorkExperience = tvInstitutionNameAddWorkExperience;
    this.tvJobTitleAddWorkExperience = tvJobTitleAddWorkExperience;
    this.tvNotesAddWorkExperience = tvNotesAddWorkExperience;
    this.tvWorkBeginningDateAddWorkExperience = tvWorkBeginningDateAddWorkExperience;
    this.tvWorkEndingDateAddWorkExperience = tvWorkEndingDateAddWorkExperience;
    this.tvWorkPlaceAddWorkExperience = tvWorkPlaceAddWorkExperience;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAddWorkExperienceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAddWorkExperienceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_add_work_experience, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAddWorkExperienceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_save_add_experience;
      MaterialButton btnSaveAddExperience = rootView.findViewById(id);
      if (btnSaveAddExperience == null) {
        break missingId;
      }

      id = R.id.ln_date;
      LinearLayout lnDate = rootView.findViewById(id);
      if (lnDate == null) {
        break missingId;
      }

      id = R.id.ln_inst_name;
      LinearLayout lnInstName = rootView.findViewById(id);
      if (lnInstName == null) {
        break missingId;
      }

      id = R.id.ln_job_name;
      LinearLayout lnJobName = rootView.findViewById(id);
      if (lnJobName == null) {
        break missingId;
      }

      id = R.id.ln_top;
      LinearLayout lnTop = rootView.findViewById(id);
      if (lnTop == null) {
        break missingId;
      }

      id = R.id.progress;
      ProgressBar progress = rootView.findViewById(id);
      if (progress == null) {
        break missingId;
      }

      id = R.id.tv_experience_type_add_work_experience;
      TextInputEditText tvExperienceTypeAddWorkExperience = rootView.findViewById(id);
      if (tvExperienceTypeAddWorkExperience == null) {
        break missingId;
      }

      id = R.id.tv_institution_name_add_work_experience;
      TextInputEditText tvInstitutionNameAddWorkExperience = rootView.findViewById(id);
      if (tvInstitutionNameAddWorkExperience == null) {
        break missingId;
      }

      id = R.id.tv_job_title_add_work_experience;
      TextInputEditText tvJobTitleAddWorkExperience = rootView.findViewById(id);
      if (tvJobTitleAddWorkExperience == null) {
        break missingId;
      }

      id = R.id.tv_notes_add_work_experience;
      TextInputEditText tvNotesAddWorkExperience = rootView.findViewById(id);
      if (tvNotesAddWorkExperience == null) {
        break missingId;
      }

      id = R.id.tv_work_beginning_date_add_work_experience;
      TextInputEditText tvWorkBeginningDateAddWorkExperience = rootView.findViewById(id);
      if (tvWorkBeginningDateAddWorkExperience == null) {
        break missingId;
      }

      id = R.id.tv_work_ending_date_add_work_experience;
      TextInputEditText tvWorkEndingDateAddWorkExperience = rootView.findViewById(id);
      if (tvWorkEndingDateAddWorkExperience == null) {
        break missingId;
      }

      id = R.id.tv_work_place_add_work_experience;
      TextInputEditText tvWorkPlaceAddWorkExperience = rootView.findViewById(id);
      if (tvWorkPlaceAddWorkExperience == null) {
        break missingId;
      }

      return new FragmentAddWorkExperienceBinding((RelativeLayout) rootView, btnSaveAddExperience,
          lnDate, lnInstName, lnJobName, lnTop, progress, tvExperienceTypeAddWorkExperience,
          tvInstitutionNameAddWorkExperience, tvJobTitleAddWorkExperience, tvNotesAddWorkExperience,
          tvWorkBeginningDateAddWorkExperience, tvWorkEndingDateAddWorkExperience,
          tvWorkPlaceAddWorkExperience);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
