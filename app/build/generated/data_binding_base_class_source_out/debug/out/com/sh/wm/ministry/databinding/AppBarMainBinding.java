// Generated by view binder compiler. Do not edit!
package com.sh.wm.ministry.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ListView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageButton;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.drawerlayout.widget.DrawerLayout;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.navigation.NavigationView;
import com.google.android.material.textview.MaterialTextView;
import com.sh.wm.ministry.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AppBarMainBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppCompatImageButton btnSideMenu;

  @NonNull
  public final CoordinatorLayout coordinateDrawer;

  @NonNull
  public final AppCompatImageView ivToolbarLogo;

  @NonNull
  public final ListView lvFloatMenu;

  @NonNull
  public final DrawerLayout sideDrawerLayout;

  @NonNull
  public final NavigationView sideNavView;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final MaterialTextView toolbarTitle;

  private AppBarMainBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppCompatImageButton btnSideMenu, @NonNull CoordinatorLayout coordinateDrawer,
      @NonNull AppCompatImageView ivToolbarLogo, @NonNull ListView lvFloatMenu,
      @NonNull DrawerLayout sideDrawerLayout, @NonNull NavigationView sideNavView,
      @NonNull Toolbar toolbar, @NonNull MaterialTextView toolbarTitle) {
    this.rootView = rootView;
    this.btnSideMenu = btnSideMenu;
    this.coordinateDrawer = coordinateDrawer;
    this.ivToolbarLogo = ivToolbarLogo;
    this.lvFloatMenu = lvFloatMenu;
    this.sideDrawerLayout = sideDrawerLayout;
    this.sideNavView = sideNavView;
    this.toolbar = toolbar;
    this.toolbarTitle = toolbarTitle;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AppBarMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AppBarMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.app_bar_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AppBarMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_side_menu;
      AppCompatImageButton btnSideMenu = rootView.findViewById(id);
      if (btnSideMenu == null) {
        break missingId;
      }

      CoordinatorLayout coordinateDrawer = (CoordinatorLayout) rootView;

      id = R.id.iv_toolbar_logo;
      AppCompatImageView ivToolbarLogo = rootView.findViewById(id);
      if (ivToolbarLogo == null) {
        break missingId;
      }

      id = R.id.lv_float_menu;
      ListView lvFloatMenu = rootView.findViewById(id);
      if (lvFloatMenu == null) {
        break missingId;
      }

      id = R.id.side_drawer_layout;
      DrawerLayout sideDrawerLayout = rootView.findViewById(id);
      if (sideDrawerLayout == null) {
        break missingId;
      }

      id = R.id.side_nav_view;
      NavigationView sideNavView = rootView.findViewById(id);
      if (sideNavView == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = rootView.findViewById(id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.toolbar_title;
      MaterialTextView toolbarTitle = rootView.findViewById(id);
      if (toolbarTitle == null) {
        break missingId;
      }

      return new AppBarMainBinding((CoordinatorLayout) rootView, btnSideMenu, coordinateDrawer,
          ivToolbarLogo, lvFloatMenu, sideDrawerLayout, sideNavView, toolbar, toolbarTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
